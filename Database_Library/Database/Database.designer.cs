#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Database_Library.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="psua0218_1026970")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTable_Automat(Table_Automat instance);
    partial void UpdateTable_Automat(Table_Automat instance);
    partial void DeleteTable_Automat(Table_Automat instance);
    partial void InsertTable_Kunde(Table_Kunde instance);
    partial void UpdateTable_Kunde(Table_Kunde instance);
    partial void DeleteTable_Kunde(Table_Kunde instance);
    partial void InsertTable_AutomatData(Table_AutomatData instance);
    partial void UpdateTable_AutomatData(Table_AutomatData instance);
    partial void DeleteTable_AutomatData(Table_AutomatData instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::Database_Library.Properties.Settings.Default.psua0218_1026970ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Table_Automat> Table_Automats
		{
			get
			{
				return this.GetTable<Table_Automat>();
			}
		}
		
		public System.Data.Linq.Table<Table_Kunde> Table_Kundes
		{
			get
			{
				return this.GetTable<Table_Kunde>();
			}
		}
		
		public System.Data.Linq.Table<Table_AutomatData> Table_AutomatDatas
		{
			get
			{
				return this.GetTable<Table_AutomatData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Automat")]
	public partial class Table_Automat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _automat_id;
		
		private int _kunde_id;
		
		private string _serienummer;
		
		private string _spilnavn;
		
		private EntitySet<Table_AutomatData> _Table_AutomatDatas;
		
		private EntityRef<Table_Kunde> _Table_Kunde;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onautomat_idChanging(int value);
    partial void Onautomat_idChanged();
    partial void Onkunde_idChanging(int value);
    partial void Onkunde_idChanged();
    partial void OnserienummerChanging(string value);
    partial void OnserienummerChanged();
    partial void OnspilnavnChanging(string value);
    partial void OnspilnavnChanged();
    #endregion
		
		public Table_Automat()
		{
			this._Table_AutomatDatas = new EntitySet<Table_AutomatData>(new Action<Table_AutomatData>(this.attach_Table_AutomatDatas), new Action<Table_AutomatData>(this.detach_Table_AutomatDatas));
			this._Table_Kunde = default(EntityRef<Table_Kunde>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_automat_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int automat_id
		{
			get
			{
				return this._automat_id;
			}
			set
			{
				if ((this._automat_id != value))
				{
					this.Onautomat_idChanging(value);
					this.SendPropertyChanging();
					this._automat_id = value;
					this.SendPropertyChanged("automat_id");
					this.Onautomat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kunde_id", DbType="Int NOT NULL")]
		public int kunde_id
		{
			get
			{
				return this._kunde_id;
			}
			set
			{
				if ((this._kunde_id != value))
				{
					if (this._Table_Kunde.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onkunde_idChanging(value);
					this.SendPropertyChanging();
					this._kunde_id = value;
					this.SendPropertyChanged("kunde_id");
					this.Onkunde_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serienummer", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string serienummer
		{
			get
			{
				return this._serienummer;
			}
			set
			{
				if ((this._serienummer != value))
				{
					this.OnserienummerChanging(value);
					this.SendPropertyChanging();
					this._serienummer = value;
					this.SendPropertyChanged("serienummer");
					this.OnserienummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spilnavn", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string spilnavn
		{
			get
			{
				return this._spilnavn;
			}
			set
			{
				if ((this._spilnavn != value))
				{
					this.OnspilnavnChanging(value);
					this.SendPropertyChanging();
					this._spilnavn = value;
					this.SendPropertyChanged("spilnavn");
					this.OnspilnavnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Automat_Table_AutomatData", Storage="_Table_AutomatDatas", ThisKey="automat_id", OtherKey="automat_id")]
		public EntitySet<Table_AutomatData> Table_AutomatDatas
		{
			get
			{
				return this._Table_AutomatDatas;
			}
			set
			{
				this._Table_AutomatDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Kunde_Table_Automat", Storage="_Table_Kunde", ThisKey="kunde_id", OtherKey="kunde_id", IsForeignKey=true)]
		public Table_Kunde Table_Kunde
		{
			get
			{
				return this._Table_Kunde.Entity;
			}
			set
			{
				Table_Kunde previousValue = this._Table_Kunde.Entity;
				if (((previousValue != value) 
							|| (this._Table_Kunde.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_Kunde.Entity = null;
						previousValue.Table_Automats.Remove(this);
					}
					this._Table_Kunde.Entity = value;
					if ((value != null))
					{
						value.Table_Automats.Add(this);
						this._kunde_id = value.kunde_id;
					}
					else
					{
						this._kunde_id = default(int);
					}
					this.SendPropertyChanged("Table_Kunde");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Table_AutomatDatas(Table_AutomatData entity)
		{
			this.SendPropertyChanging();
			entity.Table_Automat = this;
		}
		
		private void detach_Table_AutomatDatas(Table_AutomatData entity)
		{
			this.SendPropertyChanging();
			entity.Table_Automat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Kunde")]
	public partial class Table_Kunde : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _kunde_id;
		
		private string _navn;
		
		private EntitySet<Table_Automat> _Table_Automats;
		
		private EntitySet<Table_AutomatData> _Table_AutomatDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onkunde_idChanging(int value);
    partial void Onkunde_idChanged();
    partial void OnnavnChanging(string value);
    partial void OnnavnChanged();
    #endregion
		
		public Table_Kunde()
		{
			this._Table_Automats = new EntitySet<Table_Automat>(new Action<Table_Automat>(this.attach_Table_Automats), new Action<Table_Automat>(this.detach_Table_Automats));
			this._Table_AutomatDatas = new EntitySet<Table_AutomatData>(new Action<Table_AutomatData>(this.attach_Table_AutomatDatas), new Action<Table_AutomatData>(this.detach_Table_AutomatDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kunde_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int kunde_id
		{
			get
			{
				return this._kunde_id;
			}
			set
			{
				if ((this._kunde_id != value))
				{
					this.Onkunde_idChanging(value);
					this.SendPropertyChanging();
					this._kunde_id = value;
					this.SendPropertyChanged("kunde_id");
					this.Onkunde_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_navn", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string navn
		{
			get
			{
				return this._navn;
			}
			set
			{
				if ((this._navn != value))
				{
					this.OnnavnChanging(value);
					this.SendPropertyChanging();
					this._navn = value;
					this.SendPropertyChanged("navn");
					this.OnnavnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Kunde_Table_Automat", Storage="_Table_Automats", ThisKey="kunde_id", OtherKey="kunde_id")]
		public EntitySet<Table_Automat> Table_Automats
		{
			get
			{
				return this._Table_Automats;
			}
			set
			{
				this._Table_Automats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Kunde_Table_AutomatData", Storage="_Table_AutomatDatas", ThisKey="kunde_id", OtherKey="kunde_id")]
		public EntitySet<Table_AutomatData> Table_AutomatDatas
		{
			get
			{
				return this._Table_AutomatDatas;
			}
			set
			{
				this._Table_AutomatDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Table_Automats(Table_Automat entity)
		{
			this.SendPropertyChanging();
			entity.Table_Kunde = this;
		}
		
		private void detach_Table_Automats(Table_Automat entity)
		{
			this.SendPropertyChanging();
			entity.Table_Kunde = null;
		}
		
		private void attach_Table_AutomatDatas(Table_AutomatData entity)
		{
			this.SendPropertyChanging();
			entity.Table_Kunde = this;
		}
		
		private void detach_Table_AutomatDatas(Table_AutomatData entity)
		{
			this.SendPropertyChanging();
			entity.Table_Kunde = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_AutomatData")]
	public partial class Table_AutomatData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _data_id;
		
		private int _automat_id;
		
		private int _kunde_id;
		
		private System.DateTime _dato;
		
		private int _kr_ind;
		
		private int _kr_ud;
		
		private int _bsi;
		
		private EntityRef<Table_Automat> _Table_Automat;
		
		private EntityRef<Table_Kunde> _Table_Kunde;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondata_idChanging(int value);
    partial void Ondata_idChanged();
    partial void Onautomat_idChanging(int value);
    partial void Onautomat_idChanged();
    partial void Onkunde_idChanging(int value);
    partial void Onkunde_idChanged();
    partial void OndatoChanging(System.DateTime value);
    partial void OndatoChanged();
    partial void Onkr_indChanging(int value);
    partial void Onkr_indChanged();
    partial void Onkr_udChanging(int value);
    partial void Onkr_udChanged();
    partial void OnbsiChanging(int value);
    partial void OnbsiChanged();
    #endregion
		
		public Table_AutomatData()
		{
			this._Table_Automat = default(EntityRef<Table_Automat>);
			this._Table_Kunde = default(EntityRef<Table_Kunde>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int data_id
		{
			get
			{
				return this._data_id;
			}
			set
			{
				if ((this._data_id != value))
				{
					this.Ondata_idChanging(value);
					this.SendPropertyChanging();
					this._data_id = value;
					this.SendPropertyChanged("data_id");
					this.Ondata_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_automat_id", DbType="Int NOT NULL")]
		public int automat_id
		{
			get
			{
				return this._automat_id;
			}
			set
			{
				if ((this._automat_id != value))
				{
					if (this._Table_Automat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onautomat_idChanging(value);
					this.SendPropertyChanging();
					this._automat_id = value;
					this.SendPropertyChanged("automat_id");
					this.Onautomat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kunde_id", DbType="Int NOT NULL")]
		public int kunde_id
		{
			get
			{
				return this._kunde_id;
			}
			set
			{
				if ((this._kunde_id != value))
				{
					if (this._Table_Kunde.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onkunde_idChanging(value);
					this.SendPropertyChanging();
					this._kunde_id = value;
					this.SendPropertyChanged("kunde_id");
					this.Onkunde_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dato", DbType="DateTime NOT NULL")]
		public System.DateTime dato
		{
			get
			{
				return this._dato;
			}
			set
			{
				if ((this._dato != value))
				{
					this.OndatoChanging(value);
					this.SendPropertyChanging();
					this._dato = value;
					this.SendPropertyChanged("dato");
					this.OndatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kr_ind", DbType="Int NOT NULL")]
		public int kr_ind
		{
			get
			{
				return this._kr_ind;
			}
			set
			{
				if ((this._kr_ind != value))
				{
					this.Onkr_indChanging(value);
					this.SendPropertyChanging();
					this._kr_ind = value;
					this.SendPropertyChanged("kr_ind");
					this.Onkr_indChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kr_ud", DbType="Int NOT NULL")]
		public int kr_ud
		{
			get
			{
				return this._kr_ud;
			}
			set
			{
				if ((this._kr_ud != value))
				{
					this.Onkr_udChanging(value);
					this.SendPropertyChanging();
					this._kr_ud = value;
					this.SendPropertyChanged("kr_ud");
					this.Onkr_udChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bsi", DbType="Int NOT NULL")]
		public int bsi
		{
			get
			{
				return this._bsi;
			}
			set
			{
				if ((this._bsi != value))
				{
					this.OnbsiChanging(value);
					this.SendPropertyChanging();
					this._bsi = value;
					this.SendPropertyChanged("bsi");
					this.OnbsiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Automat_Table_AutomatData", Storage="_Table_Automat", ThisKey="automat_id", OtherKey="automat_id", IsForeignKey=true)]
		public Table_Automat Table_Automat
		{
			get
			{
				return this._Table_Automat.Entity;
			}
			set
			{
				Table_Automat previousValue = this._Table_Automat.Entity;
				if (((previousValue != value) 
							|| (this._Table_Automat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_Automat.Entity = null;
						previousValue.Table_AutomatDatas.Remove(this);
					}
					this._Table_Automat.Entity = value;
					if ((value != null))
					{
						value.Table_AutomatDatas.Add(this);
						this._automat_id = value.automat_id;
					}
					else
					{
						this._automat_id = default(int);
					}
					this.SendPropertyChanged("Table_Automat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Kunde_Table_AutomatData", Storage="_Table_Kunde", ThisKey="kunde_id", OtherKey="kunde_id", IsForeignKey=true)]
		public Table_Kunde Table_Kunde
		{
			get
			{
				return this._Table_Kunde.Entity;
			}
			set
			{
				Table_Kunde previousValue = this._Table_Kunde.Entity;
				if (((previousValue != value) 
							|| (this._Table_Kunde.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_Kunde.Entity = null;
						previousValue.Table_AutomatDatas.Remove(this);
					}
					this._Table_Kunde.Entity = value;
					if ((value != null))
					{
						value.Table_AutomatDatas.Add(this);
						this._kunde_id = value.kunde_id;
					}
					else
					{
						this._kunde_id = default(int);
					}
					this.SendPropertyChanged("Table_Kunde");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
